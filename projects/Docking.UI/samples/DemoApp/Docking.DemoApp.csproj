<?xml version="1.0" encoding="utf-8"?>

<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0-windows10.0.22621.0</TargetFramework>
        <SupportedOSPlatformVersion>10.0.22000.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion>10.0.22000.0</TargetPlatformMinVersion>
        <Platforms>x86;x64;arm64</Platforms>
        <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
        <UseWinUI>true</UseWinUI>

        <IsPackable>false</IsPackable>

        <AssemblyName>Docking.Demo</AssemblyName>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <PublishProfile>win-$(Platform).pubxml</PublishProfile>
        <EnableMsixTooling>true</EnableMsixTooling>
        <PublishReadyToRun>true</PublishReadyToRun>
        <WindowsAppSDKBootstrapAutoInitializeOptions_OnNoMatch_ShowUI>true</WindowsAppSDKBootstrapAutoInitializeOptions_OnNoMatch_ShowUI>
        <WindowsPackageType>None</WindowsPackageType>

        <!-- For the debug symbols package -->
        <DebugType>portable</DebugType>

        <RootNamespace>$(RootNamespace).Docking.Demo</RootNamespace>

        <!-- Use our own Main entry point so we can control the HostBuilder -->
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
        <StartupObject>$(RootNamespace).Program</StartupObject>
    </PropertyGroup>

    <ItemGroup>
        <Content Include="appsettings.json" />
        <Content Include="Assets\SplashScreen.scale-200.png" />
        <Content Include="Assets\LockScreenLogo.scale-200.png" />
        <Content Include="Assets\Square150x150Logo.scale-200.png" />
        <Content Include="Assets\Square44x44Logo.scale-200.png" />
        <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
        <Content Include="Assets\StoreLogo.png" />
        <Content Include="Assets\Wide310x150Logo.scale-200.png" />
        <Content Include="Assets\DroidNet.png" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.WindowsAppSDK" />
        <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
        <Manifest Include="$(ApplicationManifest)" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="CommunityToolkit.WinUI.Controls.Segmented" />
        <PackageReference Include="DryIoc.dll" />
        <PackageReference Include="DryIoc.Microsoft.DependencyInjection" />
        <PackageReference Include="Serilog.Expressions" />
        <PackageReference Include="Serilog.Extensions.Logging" />
        <PackageReference Include="Serilog.Sinks.Console" />
        <PackageReference Include="Serilog.Sinks.Debug" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\src\Docking.UI.csproj" />
        <ProjectReference Include="..\..\..\Mvvm\src\Mvvm.csproj" />
        <ProjectReference Include="..\..\..\Hosting\src\Hosting.csproj" />

        <!--
        For source generator (or analyzer) projects, you need to tweak the project reference element so it works as
        intended. Specifically, you need to add the OutputItemType and ReferenceOutputAssembly attributes.

         - OutputItemType="Analyzer" tells the compiler to load the project as part of the compilation process.
         - ReferenceOutputAssembly="false" tells the project not to reference the source generator project's dll.
        -->

        <ProjectReference Include="..\..\..\Hosting.Generators\src\Hosting.Generators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
        <ProjectReference Include="..\..\..\Hosting.Generators.Attributes\src\Hosting.Generators.Attributes.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="true" />


        <ProjectReference Include="..\..\..\Mvvm.Generators\src\Mvvm.Generators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
        <ProjectReference Include="..\..\..\Mvvm.Generators.Attributes\src\Mvvm.Generators.Attributes.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="true" />
    </ItemGroup>

    <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging Tools extension to be
    activated for this project even if the Windows App SDK Nuget package has not yet been restored. -->
    <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
        <ProjectCapability Include="Msix" />
    </ItemGroup>

    <!-- Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution Explorer "Package and
    Publish" context menu entry to be enabled for this project even if the Windows App SDK Nuget package has not yet
    been restored. -->
    <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
        <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
    </PropertyGroup>
</Project>
