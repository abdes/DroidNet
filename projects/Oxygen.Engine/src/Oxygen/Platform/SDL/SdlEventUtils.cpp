//===----------------------------------------------------------------------===//
// Distributed under the 3-Clause BSD License. See accompanying file LICENSE or
// copy at https://opensource.org/licenses/BSD-3-Clause.
// SPDX-License-Identifier: BSD-3-Clause
//===----------------------------------------------------------------------===//

#include <cassert>
#include <cstdint>

#include <SDL3/SDL_events.h>

namespace oxygen::platform::sdl {

auto SdlEventName(const std::uint32_t event_type) -> const char*
{
    switch (event_type) {
    case SDL_EVENT_QUIT:
        return "SDL_EVENT_QUIT(256)";
    case SDL_EVENT_TERMINATING:
        return "SDL_EVENT_TERMINATING(257)";
    case SDL_EVENT_LOW_MEMORY:
        return "SDL_EVENT_LOW_MEMORY(258)";
    case SDL_EVENT_WILL_ENTER_BACKGROUND:
        return "SDL_EVENT_WILL_ENTER_BACKGROUND(259)";
    case SDL_EVENT_DID_ENTER_BACKGROUND:
        return "SDL_EVENT_DID_ENTER_BACKGROUND(260)";
    case SDL_EVENT_WILL_ENTER_FOREGROUND:
        return "SDL_EVENT_WILL_ENTER_FOREGROUND(261)";
    case SDL_EVENT_DID_ENTER_FOREGROUND:
        return "SDL_EVENT_DID_ENTER_FOREGROUND(262)";
    case SDL_EVENT_LOCALE_CHANGED:
        return "SDL_EVENT_LOCALE_CHANGED(263)";
    case SDL_EVENT_SYSTEM_THEME_CHANGED:
        return "SDL_EVENT_SYSTEM_THEME_CHANGED(264)";
    case SDL_EVENT_DISPLAY_ORIENTATION:
        return "SDL_EVENT_DISPLAY_ORIENTATION(337)";
    case SDL_EVENT_DISPLAY_ADDED:
        return "SDL_EVENT_DISPLAY_ADDED(338)";
    case SDL_EVENT_DISPLAY_REMOVED:
        return "SDL_EVENT_DISPLAY_REMOVED(339)";
    case SDL_EVENT_DISPLAY_MOVED:
        return "SDL_EVENT_DISPLAY_MOVED(340)";
    case SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED:
        return "SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED(341)";
    case SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED:
        return "SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED(342)";
    case SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED:
        return "SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED(343)";
    case SDL_EVENT_WINDOW_SHOWN:
        return "SDL_EVENT_WINDOW_SHOWN(514)";
    case SDL_EVENT_WINDOW_HIDDEN:
        return "SDL_EVENT_WINDOW_HIDDEN(515)";
    case SDL_EVENT_WINDOW_EXPOSED:
        return "SDL_EVENT_WINDOW_EXPOSED(516)";
    case SDL_EVENT_WINDOW_MOVED:
        return "SDL_EVENT_WINDOW_MOVED(517)";
    case SDL_EVENT_WINDOW_RESIZED:
        return "SDL_EVENT_WINDOW_RESIZED(518)";
    case SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED:
        return "SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED(519)";
    case SDL_EVENT_WINDOW_METAL_VIEW_RESIZED:
        return "SDL_EVENT_WINDOW_METAL_VIEW_RESIZED(520)";
    case SDL_EVENT_WINDOW_MINIMIZED:
        return "SDL_EVENT_WINDOW_MINIMIZED(521)";
    case SDL_EVENT_WINDOW_MAXIMIZED:
        return "SDL_EVENT_WINDOW_MAXIMIZED(522)";
    case SDL_EVENT_WINDOW_RESTORED:
        return "SDL_EVENT_WINDOW_RESTORED(523)";
    case SDL_EVENT_WINDOW_MOUSE_ENTER:
        return "SDL_EVENT_WINDOW_MOUSE_ENTER(524)";
    case SDL_EVENT_WINDOW_MOUSE_LEAVE:
        return "SDL_EVENT_WINDOW_MOUSE_LEAVE(525)";
    case SDL_EVENT_WINDOW_FOCUS_GAINED:
        return "SDL_EVENT_WINDOW_FOCUS_GAINED(526)";
    case SDL_EVENT_WINDOW_FOCUS_LOST:
        return "SDL_EVENT_WINDOW_FOCUS_LOST(527)";
    case SDL_EVENT_WINDOW_CLOSE_REQUESTED:
        return "SDL_EVENT_WINDOW_CLOSE_REQUESTED(528)";
    case SDL_EVENT_WINDOW_HIT_TEST:
        return "SDL_EVENT_WINDOW_HIT_TEST(529)";
    case SDL_EVENT_WINDOW_ICCPROF_CHANGED:
        return "SDL_EVENT_WINDOW_ICCPROF_CHANGED(530)";
    case SDL_EVENT_WINDOW_DISPLAY_CHANGED:
        return "SDL_EVENT_WINDOW_DISPLAY_CHANGED(531)";
    case SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED:
        return "SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED(532)";
    case SDL_EVENT_WINDOW_SAFE_AREA_CHANGED:
        return "SDL_EVENT_WINDOW_SAFE_AREA_CHANGED(533)";
    case SDL_EVENT_WINDOW_OCCLUDED:
        return "SDL_EVENT_WINDOW_OCCLUDED(534)";
    case SDL_EVENT_WINDOW_ENTER_FULLSCREEN:
        return "SDL_EVENT_WINDOW_ENTER_FULLSCREEN(535)";
    case SDL_EVENT_WINDOW_LEAVE_FULLSCREEN:
        return "SDL_EVENT_WINDOW_LEAVE_FULLSCREEN(536)";
    case SDL_EVENT_WINDOW_DESTROYED:
        return "SDL_EVENT_WINDOW_DESTROYED(537)";
    case SDL_EVENT_WINDOW_HDR_STATE_CHANGED:
        return "SDL_EVENT_WINDOW_HDR_STATE_CHANGED(538)";
    case SDL_EVENT_KEY_DOWN:
        return "SDL_EVENT_KEY_DOWN(768)";
    case SDL_EVENT_KEY_UP:
        return "SDL_EVENT_KEY_UP(769)";
    case SDL_EVENT_TEXT_EDITING:
        return "SDL_EVENT_TEXT_EDITING(770)";
    case SDL_EVENT_TEXT_INPUT:
        return "SDL_EVENT_TEXT_INPUT(771)";
    case SDL_EVENT_KEYMAP_CHANGED:
        return "SDL_EVENT_KEYMAP_CHANGED(772)";
    case SDL_EVENT_KEYBOARD_ADDED:
        return "SDL_EVENT_KEYBOARD_ADDED(773)";
    case SDL_EVENT_KEYBOARD_REMOVED:
        return "SDL_EVENT_KEYBOARD_REMOVED(774)";
    case SDL_EVENT_TEXT_EDITING_CANDIDATES:
        return "SDL_EVENT_TEXT_EDITING_CANDIDATES(775)";
    case SDL_EVENT_MOUSE_MOTION:
        return "SDL_EVENT_MOUSE_MOTION(1024)";
    case SDL_EVENT_MOUSE_BUTTON_DOWN:
        return "SDL_EVENT_MOUSE_BUTTON_DOWN(1025)";
    case SDL_EVENT_MOUSE_BUTTON_UP:
        return "SDL_EVENT_MOUSE_BUTTON_UP(1026)";
    case SDL_EVENT_MOUSE_WHEEL:
        return "SDL_EVENT_MOUSE_WHEEL(1027)";
    case SDL_EVENT_MOUSE_ADDED:
        return "SDL_EVENT_MOUSE_ADDED(1028)";
    case SDL_EVENT_MOUSE_REMOVED:
        return "SDL_EVENT_MOUSE_REMOVED(1029)";
    case SDL_EVENT_JOYSTICK_AXIS_MOTION:
        return "SDL_EVENT_JOYSTICK_AXIS_MOTION(1536)";
    case SDL_EVENT_JOYSTICK_BALL_MOTION:
        return "SDL_EVENT_JOYSTICK_BALL_MOTION(1537)";
    case SDL_EVENT_JOYSTICK_HAT_MOTION:
        return "SDL_EVENT_JOYSTICK_HAT_MOTION(1538)";
    case SDL_EVENT_JOYSTICK_BUTTON_DOWN:
        return "SDL_EVENT_JOYSTICK_BUTTON_DOWN(1539)";
    case SDL_EVENT_JOYSTICK_BUTTON_UP:
        return "SDL_EVENT_JOYSTICK_BUTTON_UP(1540)";
    case SDL_EVENT_JOYSTICK_ADDED:
        return "SDL_EVENT_JOYSTICK_ADDED(1541)";
    case SDL_EVENT_JOYSTICK_REMOVED:
        return "SDL_EVENT_JOYSTICK_REMOVED(1542)";
    case SDL_EVENT_JOYSTICK_BATTERY_UPDATED:
        return "SDL_EVENT_JOYSTICK_BATTERY_UPDATED(1543)";
    case SDL_EVENT_JOYSTICK_UPDATE_COMPLETE:
        return "SDL_EVENT_JOYSTICK_UPDATE_COMPLETE(1544)";
    case SDL_EVENT_GAMEPAD_AXIS_MOTION:
        return "SDL_EVENT_GAMEPAD_AXIS_MOTION(1616)";
    case SDL_EVENT_GAMEPAD_BUTTON_DOWN:
        return "SDL_EVENT_GAMEPAD_BUTTON_DOWN(1617)";
    case SDL_EVENT_GAMEPAD_BUTTON_UP:
        return "SDL_EVENT_GAMEPAD_BUTTON_UP(1618)";
    case SDL_EVENT_GAMEPAD_ADDED:
        return "SDL_EVENT_GAMEPAD_ADDED(1619)";
    case SDL_EVENT_GAMEPAD_REMOVED:
        return "SDL_EVENT_GAMEPAD_REMOVED(1620)";
    case SDL_EVENT_GAMEPAD_REMAPPED:
        return "SDL_EVENT_GAMEPAD_REMAPPED(1621)";
    case SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN:
        return "SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN(1622)";
    case SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION:
        return "SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION(1623)";
    case SDL_EVENT_GAMEPAD_TOUCHPAD_UP:
        return "SDL_EVENT_GAMEPAD_TOUCHPAD_UP(1624)";
    case SDL_EVENT_GAMEPAD_SENSOR_UPDATE:
        return "SDL_EVENT_GAMEPAD_SENSOR_UPDATE(1625)";
    case SDL_EVENT_GAMEPAD_UPDATE_COMPLETE:
        return "SDL_EVENT_GAMEPAD_UPDATE_COMPLETE(1626)";
    case SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED:
        return "SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED(1627)";
    case SDL_EVENT_FINGER_DOWN:
        return "SDL_EVENT_FINGER_DOWN(1792)";
    case SDL_EVENT_FINGER_UP:
        return "SDL_EVENT_FINGER_UP(1793)";
    case SDL_EVENT_FINGER_MOTION:
        return "SDL_EVENT_FINGER_MOTION(1794)";
    case SDL_EVENT_CLIPBOARD_UPDATE:
        return "SDL_EVENT_CLIPBOARD_UPDATE(2304)";
    case SDL_EVENT_DROP_FILE:
        return "SDL_EVENT_DROP_FILE(4096)";
    case SDL_EVENT_DROP_TEXT:
        return "SDL_EVENT_DROP_TEXT(4097)";
    case SDL_EVENT_DROP_BEGIN:
        return "SDL_EVENT_DROP_BEGIN(4098)";
    case SDL_EVENT_DROP_COMPLETE:
        return "SDL_EVENT_DROP_COMPLETE(4099)";
    case SDL_EVENT_DROP_POSITION:
        return "SDL_EVENT_DROP_POSITION(4100)";
    case SDL_EVENT_AUDIO_DEVICE_ADDED:
        return "SDL_EVENT_AUDIO_DEVICE_ADDED(4352)";
    case SDL_EVENT_AUDIO_DEVICE_REMOVED:
        return "SDL_EVENT_AUDIO_DEVICE_REMOVED(4353)";
    case SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED:
        return "SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED(4354)";
    case SDL_EVENT_SENSOR_UPDATE:
        return "SDL_EVENT_SENSOR_UPDATE(4608)";
    case SDL_EVENT_PEN_PROXIMITY_IN:
        return "SDL_EVENT_PEN_PROXIMITY_IN(4864)";
    case SDL_EVENT_PEN_PROXIMITY_OUT:
        return "SDL_EVENT_PEN_PROXIMITY_OUT(4865)";
    case SDL_EVENT_PEN_DOWN:
        return "SDL_EVENT_PEN_DOWN(4866)";
    case SDL_EVENT_PEN_UP:
        return "SDL_EVENT_PEN_UP(4867)";
    case SDL_EVENT_PEN_BUTTON_DOWN:
        return "SDL_EVENT_PEN_BUTTON_DOWN(4868)";
    case SDL_EVENT_PEN_BUTTON_UP:
        return "SDL_EVENT_PEN_BUTTON_UP(4869)";
    case SDL_EVENT_PEN_MOTION:
        return "SDL_EVENT_PEN_MOTION(4870)";
    case SDL_EVENT_PEN_AXIS:
        return "SDL_EVENT_PEN_AXIS(4871)";
    case SDL_EVENT_CAMERA_DEVICE_ADDED:
        return "SDL_EVENT_CAMERA_DEVICE_ADDED(5120)";
    case SDL_EVENT_CAMERA_DEVICE_REMOVED:
        return "SDL_EVENT_CAMERA_DEVICE_REMOVED(5121)";
    case SDL_EVENT_CAMERA_DEVICE_APPROVED:
        return "SDL_EVENT_CAMERA_DEVICE_APPROVED(5122)";
    case SDL_EVENT_CAMERA_DEVICE_DENIED:
        return "SDL_EVENT_CAMERA_DEVICE_DENIED(5123)";
    case SDL_EVENT_RENDER_TARGETS_RESET:
        return "SDL_EVENT_RENDER_TARGETS_RESET(8192)";
    case SDL_EVENT_RENDER_DEVICE_RESET:
        return "SDL_EVENT_RENDER_DEVICE_RESET(8193)";
    case SDL_EVENT_POLL_SENTINEL:
        return "SDL_EVENT_POLL_SENTINEL(32512)";
    case SDL_EVENT_USER:
        return "SDL_EVENT_USER(32768)";
    case SDL_EVENT_ENUM_PADDING:
        return "SDL_EVENT_ENUM_PADDING(2147483647)";

    default:
        assert(false && "Unexpected event type. Please regenerate the code using the tool.");
    }
    return "__UNKNOWN_SDL_EVENT_REGENERATE__";
}

} // namespace oxygen::platform::sdl
