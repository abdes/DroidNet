// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define OXYGEN_API
#define OXYGEN_API __declspec(dllexport)
#define OXYGEN_API __declspec(dllimport)
#define OXYGEN_DIAGNOSTIC_PUSH _Pragma("clang diagnostic push")
#define OXYGEN_DIAGNOSTIC_PUSH _Pragma("GCC diagnostic push")
#define OXYGEN_DIAGNOSTIC_PUSH __pragma(warning(push))
#define OXYGEN_DIAGNOSTIC_PUSH
#define OXYGEN_DIAGNOSTIC_POP _Pragma("clang diagnostic pop")
#define OXYGEN_DIAGNOSTIC_POP _Pragma("GCC diagnostic pop")
#define OXYGEN_DIAGNOSTIC_POP __pragma(warning(pop))
#define OXYGEN_DIAGNOSTIC_POP
#define DECLARE_RESOURCE(scope, Name) using Name##Id = ResourceHandle; namespace scope { struct Descriptor; } using Name##Descriptor = scope##::Descriptor; class Name;
#define MAKE_RESOURCE_TABLE(name, type, itemType) ResourceTable<type> name(oxygen::world::resources::k##itemType, 256);
#define OXGN_D3D12_API
#define LOGURU_ANONYMOUS_NAMESPACE_BEGIN namespace {
#define LOGURU_ANONYMOUS_NAMESPACE_BEGIN
#define OXYGEN_MAKE_NON_COPYABLE(Type) Type(const Type &) = delete; auto operator=(const Type &)->Type & = delete;
#define OXYGEN_MAKE_NON_MOVABLE(Type) Type(Type &&) = delete; auto operator=(Type &&)->Type & = delete;
#define CHECK_F(test, __VA_ARGS__) CHECK_WITH_INFO_F(test, #test,##__VA_ARGS__)
#define OXGN_GFX_API
#define OXGN_GFX_API __declspec(dllexport)
#define OXGN_GFX_API __declspec(dllimport)
#define OXGN_GFX_API __attribute__((visibility("default")))
#define OXYGEN_DEFAULT_COPYABLE(Type) Type(const Type&) = default; auto operator=(const Type&)->Type& = default;
#define OXYGEN_DEFAULT_MOVABLE(Type) Type(Type&&) = default; auto operator=(Type&&)->Type& = default;
#define OXYGEN_COMPONENT(arg_type) protected: friend class oxygen::Composition; OXYGEN_TYPED(arg_type)
#define OXYGEN_COMPONENT_REQUIRES(__VA_ARGS__) OXYGEN_COMPONENT_REQUIRES_WARN_(__VA_ARGS__)
#define OXYGEN_BASE_API
#define OXYGEN_BASE_API __declspec(dllexport)
#define OXYGEN_BASE_API __declspec(dllimport)
#define OXYGEN_BASE_API __attribute__((visibility("default")))
#define OXYGEN_PLATFORM_API
#define OXYGEN_PLATFORM_API __declspec(dllexport)
#define OXYGEN_PLATFORM_API __declspec(dllimport)
#define OXYGEN_PLATFORM_API __attribute__((visibility("default")))
#define OXYGEN_TYPED(arg_type) public: inline static constexpr auto ClassTypeName() { return OXYGEN_TYPE_NAME_IMPL(); } inline static auto ClassTypeId() -> oxygen::TypeId { static oxygen::TypeId typeId = oxygen::TypeRegistry::Get().RegisterType(arg_type::ClassTypeName()); return typeId; } auto GetTypeName() const -> const char* override { return ClassTypeName(); } inline auto GetTypeId() const -> oxygen::TypeId override { return ClassTypeId(); } private:
#define OXGN_COM_API
#define OXGN_COM_API __declspec(dllexport)
#define OXGN_COM_API __declspec(dllimport)
#define OXGN_COM_API __attribute__((visibility("default")))
