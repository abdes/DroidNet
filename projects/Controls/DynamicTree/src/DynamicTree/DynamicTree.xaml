<?xml version="1.0" encoding="utf-8" ?>

<UserControl
    x:Class="DroidNet.Controls.DynamicTree"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:DroidNet.Converters"
    xmlns:lc="using:DroidNet.Controls"
    x:Name="TreeControl">

    <UserControl.Resources>
        <converters:BoolToBrushConverter
            x:Key="ItemBackgroundBrushConverter"
            ActiveBrush="{StaticResource ActiveItemBackground}"
            InactiveBrush="{StaticResource InactiveItemBackground}" />
    </UserControl.Resources>

    <!--  ViewModel will never be null under standard operation conditions  -->

    <ItemsView
        IsItemInvokedEnabled="False"
        ItemsSource="{x:Bind ViewModel.ShownItems}"
        SelectionMode="None"
        Style="{StaticResource DynamicTreeItemsViewStyle}">
        <ItemsView.Resources>
            <!--  ReSharper disable once Xaml.RedundantResource (overriding default behavior of ItemsView)  -->
            <x:Boolean x:Key="ListViewItemSelectionIndicatorVisualEnabled">False</x:Boolean>
        </ItemsView.Resources>
        <ItemsView.ItemTemplate>
            <DataTemplate x:DataType="lc:TreeItemAdapter">
                <!--
                    Interaction with the tree items should be possible over the entire surface of the item container.
                    Therefore, we want to setup the Tapped and DoubleTapped event handlers on the ItemContainer element.
                    For this to work well, we need to have access to the TreeItemAdapter inside these event handlers,
                    which we pass as the DataContext.
                -->
                <ItemContainer
                    Background="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource ItemBackgroundBrushConverter}}"
                    DataContext="{x:Bind}"
                    DoubleTapped="ItemDoubleTapped"
                    IsDoubleTapEnabled="True"
                    IsTapEnabled="True"
                    Tapped="ItemTapped">
                    <lc:DynamicTreeItem
                        Collapse="OnCollapseTreeItem"
                        Expand="OnExpandTreeItem"
                        ItemAdapter="{x:Bind}" />
                </ItemContainer>
            </DataTemplate>
        </ItemsView.ItemTemplate>

    </ItemsView>

</UserControl>
