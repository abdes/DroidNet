<?xml version="1.0" encoding="utf-8"?>

<!--
How to setup source generator project
https://stackoverflow.com/questions/74915263/c-sharp-source-generator-filenotfoundexception-could-not-load-file-or-assembly
https://github.com/dotnet/roslyn/issues/52017#issuecomment-1046216200
https://github.com/amis92/csharp-source-generators
-->

<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>

        <!--
        Must override this to false from the Directory.Build.props or Nuget
        will refuse to make the package because we are no shipping the assembly
        in the usual lib directory for a generator. Instead we ship it in the
        analyzers/dotnet/cs directory.
        -->
        <IncludeSymbols>false</IncludeSymbols>
        <IncludeBuildOutput>false</IncludeBuildOutput>

        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsRoslynComponent>true</IsRoslynComponent>
        <DevelopmentDependency>true</DevelopmentDependency>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <!--Make nuget package automatically during msbuild run-->
        <IsPackable>true</IsPackable>
        <!--Also can make the nuget package with dotnet pack-->

        <RootNamespace>$(RootNamespace).Mvvm.Generators</RootNamespace>
        <Title>Source generator for View to ViewModel wiring</Title>
        <PackageReadmeFile>README.md</PackageReadmeFile>

        <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    </PropertyGroup>

    <PropertyGroup>
        <NoWarn>1701;1702;NU5128</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <None Remove="Templates\**\*.txt" />
        <EmbeddedResource Include="Templates\**\*.txt" />
    </ItemGroup>

    <ItemGroup>
        <None Update="README.md">
            <Pack>True</Pack>
            <PackagePath>\</PackagePath>
        </None>
    </ItemGroup>

    <!--Required for any analyzer / generator-->
    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" PrivateAssets="all" />
    </ItemGroup>

    <!--
    Generator external dependencies.
    These must all be referenced with GeneratePathProperty="true" and PrivateAssets="all".
    They get explicitly copied to the "analyzers/dotnet/cs" directory later.

    NOTE: May need to also add any transitive dependencies.
    -->
    <ItemGroup>
        <PackageReference Include="Handlebars.Net" GeneratePathProperty="true" PrivateAssets="all" />

        <!-- Reference the attributes from the generator to compile against them -->
        <!-- Ensure we specify PrivateAssets so the NuGet doesn't have any dependencies -->
        <ProjectReference Include="$(ProjectsRoot)\Mvvm.Generators.Attributes\src\Mvvm.Generators.Attributes.csproj" PrivateAssets="all" />
    </ItemGroup>
    <PropertyGroup>
        <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
    </PropertyGroup>
    <Target Name="GetDependencyTargetPaths">
        <ItemGroup>
            <TargetPathWithTargetPlatformMoniker Include="$(PKGHandlebars_Net)\lib\netstandard2.0\Handlebars.dll" IncludeRuntimeDependency="false" />

            <!--Pack both our DLL and the dependencies into a generated Nuget Package-->
            <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
            <!-- <None Include="$(PKGHandlebars_Net)\lib\netstandard2.0\Handlebars.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" /> -->

            <!-- Pack the attributes dll in the analyzers/dotnet/cs path -->
            <None Include="$(OutputPath)\DroidNet.Mvvm.Generators.Attributes.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

            <!-- Pack the attributes dll in the lib\netstandard2.0 path -->
            <None Include="$(OutputPath)\DroidNet.Mvvm.Generators.Attributes.dll" Pack="true" PackagePath="lib/netstandard2.0" Visible="true" />
        </ItemGroup>
    </Target>

</Project>
