<?xml version="1.0" encoding="utf-8"?>

<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net9.0-windows10.0.26100.0</TargetFrameworks>

        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

        <RootNamespace>Oxygen.Editor.Interop.Tests</RootNamespace>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="$(ProjectsRoot)\Oxygen.Editor.Interop\src\Oxygen.Editor.Interop.vcxproj" />

        <!-- Reference the wrapped native project so that its DLL gets copied to our output directory -->
        <!--
        Visual Studio doesn't support referencing an unmanaged C++ project from a managed C# one,
        but MSBuild supports referencing any project from any other project.

        When you perform the build, the reference will cause MSBuild to build the referenced project
        first. The ReferenceOutputAssembly value tells MSBuild not to copy the output assembly of
        the build (since the C++ project does not produce one), but the OutputItemType and
        CopyToOutputDirectory values instruct it to copy the output content to the referencing
        project's output folder.
        https://learn.microsoft.com/en-us/archive/blogs/kirillosenkov/how-to-have-a-project-reference-without-referencing-the-actual-binary
        -->
        <ProjectReference Include="$(OxygenEditorInterfaceProject)">
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
            <OutputItemType>Content</OutputItemType>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </ProjectReference>
    </ItemGroup>
</Project>
